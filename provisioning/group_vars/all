git:
  name: Your name
  email: Your email

host:
  user: vagrant

# Which user do we want to install ruby for
ruby_deploy_user: vagrant

# Which version we want to install (see `rbenv install -l`)
ruby_version: 2.2.1

# The default version (used with `rbenv global`)
ruby_default: '2.2.1'

# Dependencies required to build ruby
# YMMV if you want something else than MRI
ruby_deps:
  - autoconf
  - automake
  - bison
  - build-essential
  - curl
  - exuberant-ctags
  - git-core
  - libreadline6
  - libreadline6-dev
  - libreadline-dev
  - libsqlite3-0
  - libsqlite3-dev
  - libssl-dev
  - libyaml-dev
  - libc6-dev
  - libncurses5-dev
  - libtool
  - libxml2-dev
  - libxslt1-dev
  - openssl
  - sqlite3
  - subversion
  - zlib1g
  - zlib1g-dev
  - libffi-dev
  - libgdbm3
  - libgdbm-dev

# Basic settings
postgresql_version: 9.3
postgresql_encoding: 'UTF-8'
postgresql_locale: 'en_US.UTF-8'

postgresql_ext_install_contrib: yes
postgresql_ext_install_dev_headers: yes

# List of databases to be created (optional)
postgresql_databases:
  - name: foobar
    hstore: yes         # flag to install the hstore extension on this database (yes/no)
    uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)

# List of users to be created (optional)
postgresql_users:
  - name: vagrant
    pass: password
    encrypted: no       # denotes if the password is already encrypted.

# List of user privileges to be applied (optional)
# postgresql-ext task is used as original one makes to specify db param which is not wanted in our case
# TODO: find out how to fix original task
# https://github.com/ansible/ansible-modules-core/blob/devel/database/postgresql/postgresql_user.py
# http://docs.ansible.com/developing_modules.html
postgresql_ext_user_privileges:
  - name: vagrant       # user name
    role_attr_flags: "SUPERUSER,CREATEDB,LOGIN" # role attribute flags

redis:
  deb:
    package: 'redis-server'
    service: 'redis-server'

zsh:
  theme: 'agnoster'

